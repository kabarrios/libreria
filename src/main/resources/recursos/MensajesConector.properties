#Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nReason and Corrective action\ntrace\: {3}
0 	 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nThe call completed normally. The completion code (CompCode) is MQCC_OK\ntrace\: {3}
900  = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nThis is the lowest value for an application-defined reason code returned by a data-conversion exit. Data-conversion exits can return reason codes in the range MQRC_APPL_FIRST through MQRC_APPL_LAST to indicate particular conditions that the exit has detected.\nCorrective action: As defined by the writer of the data-conversion exit. \ntrace\: {3}
999  = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nThis is the highest value for an application-defined reason code returned by a data-conversion exit. Data-conversion exits can return reason codes in the range MQRC_APPL_FIRST through MQRC_APPL_LAST to indicate particular conditions that the exit has detected.\nCorrective action: As defined by the writer of the data-conversion exit. \ntrace\: {3}
2001 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nAn MQOPEN or MQPUT1 call was issued specifying an alias queue as the destination, but the BaseQName in the alias queue definition resolves to a queue that is not a local queue, a local definition of a remote queue, or a cluster queue.\nCorrective action: Correct the queue definitions. \ntrace\: {3}
2002 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nAn MQCONN or MQCONNX call was issued, but the application is already connected to the queue manager. On z/OS, this reason code occurs for batch and IMS applications only; it does not occur for CICS applications. On Windows, MTS objects do not receive this reason code, as additional connections to the queue manager are allowed.\nCorrective action: None. The Hconn parameter returned has the same value as was returned for the previous MQCONN or MQCONNX call. An MQCONN or MQCONNX call that returns this reason code does not mean that an additional MQDISC call must be issued in order to disconnect from the queue manager. If this reason code is returned because the application has been called in a situation where the connect has already been done, a corresponding MQDISC should not be issued, because this will cause the application that issued the original MQCONN or MQCONNX call to be disconnected as well. \ntrace\: {3}
2003 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nThe current unit of work encountered a fatal error or was backed out. This occurs in the following cases:\n* On an MQCMIT or MQDISC call, when the commit operation has failed and the unit of work has been backed out. All resources that participated in the unit of work have been returned to their state at the start of the unit of work. The MQCMIT or MQDISC call completes with MQCC_WARNING in this case. On z/OS, this reason code occurs only for batch applications.\n* On an MQGET, MQPUT, or MQPUT1 call that is operating within a unit of work, when the unit of work has already encountered an error that prevents the unit of work being committed (for example, when the log space is exhausted). The application must issue the appropriate call to back out the unit of work. For a unit of work coordinated by the queue manager, this call is the MQBACK call, although the MQCMIT call has the same effect in these circumstances. The MQGET, MQPUT, or MQPUT1 call completes with MQCC_FAILED in this case. On z/OS, this case does not occur.\nCorrective action: Check the returns from previous calls to the queue manager. For example, a previous MQPUT call may have failed. \ntrace\: {3}
2004 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nThe Buffer parameter is not valid for one of the following reasons:\n* The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.)\n* The parameter pointer points to storage that cannot be accessed for the entire length specified by BufferLength.\n* For calls where Buffer is an output parameter: the parameter pointer points to read-only storage.\nCorrective action: Correct the parameter.\ntrace\: {3}
2005 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nThe BufferLength parameter is not valid, or the parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) This reason can also be returned by the MQZ_ENUMERATE_AUTHORITY_DATA installable service component when the AuthorityBuffer parameter is too small to accommodate the data to be returned to the invoker of the service component.\nCorrective action: Specify a value that is zero or greater. For the mqAddString and mqSetString calls, the special value MQBL_NULL_TERMINATED is also valid.\ntrace\: {3}
2006 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nCharAttrLength is negative (for MQINQ or MQSET calls), or is not large enough to hold all selected attributes (MQSET calls only). This reason also occurs if the parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.)\nCorrective action: Specify a value large enough to hold the concatenated strings for all selected attributes.\ntrace\: {3}
2007 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nCharAttrs is not valid. The parameter pointer is not valid, or points to read-only storage for MQINQ calls or to storage that is not as long as implied by CharAttrLength. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.)\nCorrective action: Correct the parameter.\ntrace\: {3}
2008 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nFor MQINQ calls, CharAttrLength is not large enough to contain all of the character attributes for which MQCA_* selectors are specified in the Selectors parameter. The call still completes, with the CharAttrs parameter string filled in with as many character attributes as there is room for. Only complete attribute strings are returned: if there is insufficient space remaining to accommodate an attribute in its entirety, that attribute and subsequent character attributes are omitted. Any space at the end of the string not used to hold an attribute is unchanged. An attribute that represents a set of values (for example, the namelist Names attribute) is treated as a single entity---either all of its values are returned, or none.\nCorrective action: Specify a large enough value, unless only a subset of the values is needed.\ntrace\: {3}
2009 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nConnection to the queue manager has been lost. This can occur because the queue manager has ended. If the call is an MQGET call with the MQGMO_WAIT option, the wait has been canceled. All connection and object handles are now invalid. For WebSphere MQ client applications, it is possible that the call did complete successfully, even though this reason code is returned with a CompCode of MQCC_FAILED.\nCorrective action: Applications can attempt to reconnect to the queue manager by issuing the MQCONN or MQCONNX call. It may be necessary to poll until a successful response is received. On z/OS for CICS applications, it is not necessary to issue the MQCONN or MQCONNX call, because CICS applications are connected automatically. Any uncommitted changes in a unit of work should be backed out. A unit of work that is coordinated by the queue manager is backed out automatically.\ntrace\: {3}
2010 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nThe DataLength parameter is not valid. Either the parameter pointer is not valid, or it points to read-only storage. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) This reason can also be returned to an MQ client program on the MQGET, MQPUT, or MQPUT1 call, if the BufferLength parameter exceeds the maximum message size that was negotiated for the client channel.\nCorrective action: Correct the parameter. If the error occurs for a WebSphere MQ client program, also check that the maximum message size for the channel is big enough to accommodate the message being sent; if it is not big enough, increase the maximum message size for the channel.\ntrace\: {3}
2016 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nMQGET calls are currently inhibited for the queue, or for the queue to which this queue resolves.\nCorrective action\: If the system design allows get requests to be inhibited for short periods, retry the operation later.\ntrace\: {3}
2033 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nTimeout completed by the response, consider waiting longer for the message.\ntrace\: {3}
2035 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nThe user is not authorized to perform the operation attempted:\n* On an MQCONN or MQCONNX call, the user is not authorized to connect to the queue manager. On z/OS, for CICS applications, MQRC_CONNECTION_NOT_AUTHORIZED is issued instead.\n* On an MQOPEN or MQPUT1 call, the user is not authorized to open the object for the option(s) specified. On z/OS, if the object being opened is a model queue, this reason also arises if the user is not authorized to create a dynamic queue with the required name.\n* On an MQCLOSE call, the user is not authorized to delete the object, which is a permanent dynamic queue, and the Hobj parameter specified on the MQCLOSE call is not the handle returned by the MQOPEN call that created the queue. This reason code can also occur in the Feedback field in the message descriptor of a report message; in this case it indicates that the error was encountered by a message channel agent when it attempted to put the message on a remote queue.\nCorrective action: Ensure that the correct queue manager or object was specified, and that appropriate authority exists. On z/OS, to determine for which object you are not authorized, you can use the violation messages issued by the External Security Manager.\ntrace\: {3} 
2053 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nOn an MQPUT or MQPUT1 call, the call failed because the queue is full, that is, it already contains the maximum number of messages possible.\nThis reason code can also occur in the Feedback field in the message descriptor of a report message; in this case it indicates that the error was encountered by a message channel agent when it attempted to put the message on a remote queue.\r\nRetry the operation later. Consider increasing the maximum depth for this queue, or arranging for more instances of the application to service the queue.\nCorrective action\: Retry the operation later. Consider increasing the maximum depth for this queue, or arranging for more instances of the application to service the queue.\ntrace\: {3}
2059 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nOn an MQCONN or MQCONNX call, the queue manager identified by the QMgrName parameter is not available for connection.\nCorrective action\: Ensure that the queue manager has been started. If the connection is from a client application, check the channel definitions.\ntrace\: {3} 
2085 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nAn MQOPEN or MQPUT1 call was issued, but the object identified by the ObjectName and ObjectQMgrName fields in the object descriptor MQOD cannot be found. The ObjectQMgrName field is one of the following\: -- Blank -- The name of the local queue manager -- The name of a local definition of a remote queue (a queue-manager alias) in which the RemoteQMgrName attribute is the name of the local queue manager but no object with the specified ObjectName and ObjectType exists on the local queue manager.\\nCorrective action\: Specify a valid object name. Ensure that the name is padded to the right with blanks if necessary. If this is correct, check the queue definitions.\ntrace\: {3}
2110 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nAn MQGET call was issued with the MQGMO_CONVERT option specified in the GetMsgOpts parameter, but the message cannot be converted successfully due to an error associated with the message format. Possible errors include:\n* The format name in the message is MQFMT_NONE.\n* A user-written exit with the name specified by the Format field in the message cannot be found.\n* The message contains data that is not consistent with the format definition. The message is returned unconverted to the application issuing the MQGET call, the values of the CodedCharSetId and Encoding fields in the MsgDesc parameter are set to those of the message returned, and the call completes with MQCC_WARNING. If the message consists of several parts, each of which is described by its own CodedCharSetId and Encoding fields (for example, a message with format name MQFMT_DEAD_LETTER_HEADER), some parts may be converted and other parts not converted. However, the values returned in the various CodedCharSetId and Encoding fields always correctly describe the relevant message data.\nCorrective action: Check the format name that was specified when the message was put. If this is not one of the built-in formats, check that a suitable exit with the same name as the format is available for the queue manager to load. Verify that the data in the message corresponds to the format expected by the exit.\ntrace\: {3} 
2161 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nAn MQI call was issued, but the call failed because the queue manager is quiescing (preparing to shut down). When the queue manager is quiescing, the MQOPEN, MQPUT, MQPUT1, and MQGET calls can still complete successfully, but the application can request that they fail by specifying the appropriate option on the call: \n* MQOO_FAIL_IF_QUIESCING on MQOPEN\n* MQPMO_FAIL_IF_QUIESCING on MQPUT or MQPUT1\n* MQGMO_FAIL_IF_QUIESCING on MQGET Specifying these options enables the application to become aware that the queue manager is preparing to shut down.\n* On z/OS: -- For batch applications, this reason can be returned to applications running in non-WebSphere MQ LPARs. -- For CICS applications, this reason can be returned when no connection was established.\n* On OS/400 for applications running in compatibility mode, this reason can be returned when no connection was established.\nCorrective action: The application should tidy up and end. If the application specified the MQOO_FAIL_IF_QUIESCING, MQPMO_FAIL_IF_QUIESCING, or MQGMO_FAIL_IF_QUIESCING option on the failing call, the relevant option can be removed and the call reissued. By omitting these options, the application can continue working in order to complete and commit the current unit of work, but the application should not start a new unit of work.\ntrace\: {3}  
2184 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nOn an MQOPEN or MQPUT1 call, one of the following occurred:\n*A local definition of a remote queue (or an alias to one) was specified, but the RemoteQName attribute in the remote queue definition is entirely blank. Note that this error occurs even if the XmitQName in the definition is not blank.\n*The ObjectQMgrName field in the object descriptor was not blank and not the name of the local queue manager, but the ObjectName field is blank.\nCorrective action: Alter the local definition of the remote queue and supply a valid remote queue name, or supply a nonblank ObjectName in the object descriptor, as appropriate.\ntrace\: {3}
2495 = Reason Code\: {0}, Symbol\: {1}, Completition Code\: {2}\nThis problem could be caused by either of the two following reasons:\n-A MQCB call was made with an Operation of MQOP_REGISTER specifying a CallbackName which could not be found. Ensure that the CallbackName value is specified correctly.\n-The Java MQ code could not load a Java native shared library. Check the associated Exception stack and FFST. Ensure that the JNI shared library is specified correctly.\ntrace\: {3}
error.mq = Error MQ, favor verifique logs para mayor informacion
error.backend = Error generado en el backend correspondiente al servicio {0}, favor verfique los logs de dicho backend